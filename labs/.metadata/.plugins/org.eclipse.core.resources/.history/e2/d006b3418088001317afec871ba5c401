//============================================================================
// Name        : lab2.cpp
// Author      : RT Hatfield
// Version     :
// Copyright   : this
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <set>
#include <string>
#include <fstream>
#include <cctype>
#include <map>
#include <list>

using namespace std;

set<string> newDict(char* from){
	ifstream src;					//open streams etc.
	src.open(from);

	set<string> dest;
	string s;
	while(getline(src, s)){			//read file into set, word by word
		dest.insert(s);
	}

	src.close();					//close stream, return set
	return dest;
}

void pretty(string targ){			//make strings compatible w/ dictionary
	for (auto c : targ){
		c = tolower(c);				//send characters to lowercase
	}
	for (auto c : targ){			//and check for letter-ness
		if(!isalpha(c)){
			targ.erase(c);
		}
	}
}

void generateOutput(char* to, map<string, list<int>> source){
	ofstream dest;
	dest.open(to);

	map<string, list<int>>:iterator i;

	for(i = source.begin(); i <= source.end(); i++){
		cout << i->first;
		cout << ":";
		cout << printable.second << endl;
	}

	dest.close();
}

int main(int argc, char* argv[]) {

	set<string> dictionary = newDict(argv[1]);

	ifstream document;

	document.open(argv[2]);

	string words;

	map<string, list<int>> errors;

	int lineCounter = 0;

	while(getline(document, words)){
		lineCounter++;				//because we want to iterate on every line in the document
		pretty(words);

		for(string w : words){		//i *do* know it's a string, and count won't be agnostic...
			if(!dictionary.count(w)){

				errors[w].push_back(lineCounter);
									//i am about 75 percent sure this will work.  LET'S HOPE
			}
		}
	}





	return 0;
}
